name: Run Ardo for Windows

on:
  push:
    branches: 
      - main
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  pull_request:
    branches: 
      - main
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  workflow_dispatch:
  repository_dispatch:
    types: ardo-build-win

env:
  ARDOUR_VERSION: "8.1"
  # available upload services: wetransfer.com, file.io, 0x0.st
  UPLOAD_SERVICE: wetransfer.com
  # ardour spurce code tar ball, need check its sha256sums.
  # https://community.ardour.org/srctar
  # https://fossies.org/linux/misc/Ardour-6.8.0.tar.bz2
  ARTIFACT_RETENTION_DAYS: 3

jobs:
  ardo-x-win-build:
    name: Ardo Cross Compile Build for Win ${{ matrix.config.arch }} with optimization ${{ matrix.config.enable_opt }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              # Do not use Python 3.12 and above version.
              # 'distutils' and 'imp' packages are removed in python version 3.12, 
              # so some gtk build maybe fail.
              arch: x86_64,
              warch: w64,
              image_repo: debian,
              image_tag: buster,
              enable_opt: "ON"
              # gcc8
            }
          # - {
          #     arch: i686,
          #     warch: w32,
          #     image_repo: debian,
          #     image_tag: buster,
          #     enable_opt: "ON"
          #     # gcc8
          #   }
          - {
              arch: x86_64,
              warch: w64,
              image_repo: debian,
              image_tag: buster,
              enable_opt: "OFF"
              # gcc8
            }
          # - {
          #     arch: i686,
          #     warch: w32,
          #     image_repo: debian,
          #     image_tag: buster,
          #     enable_opt: "OFF"
          #     # gcc8
          #   }
    container:
      image: ${{ matrix.config.image_repo }}:${{ matrix.config.image_tag }}
      options: -v ${{ github.workspace }}:/home/ardour:rw
    steps:
      - name: Install Dependencies on Debian
        shell: bash
        run: |
          apt-get -y -qq update && apt-get -y --no-install-recommends install \
            apt-transport-https \
            curl \
            wget \
            sudo \
            git \
            ca-certificates \
            unzip \
            rsync \
            ed \
            yasm \
            cmake \
            nsis \
            subversion \
            ocaml-nox \
            gperf \
            meson \
            python \
            python3 \
            python3-pip \
            build-essential \
            ccache \
            autoconf \
            automake \
            libtool \
            pkg-config \
            gettext

      - name: Checkout Build Tools Source Code
        if: github.event_name == 'push'
        uses: actions/checkout@v4
        with:
          repository: magicalbox/ardo
          token: ${{ secrets.GH_PAT }} 
          fetch-depth: 0
          ref: main
          path: '.'

      - name: Checkout Build Tools Source Code
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
          path: '.'

      - name: Get Ardo Latest Release Source Code
        uses: actions/checkout@v4
        with:
          repository: 'Ardour/ardour'
          fetch-depth: 1
          ref: ${{ env.ARDOUR_VERSION }}
          path: './src'

      - name: Prepare
        shell: bash
        run: |
          chmod a+x /home/ardour/scripts/ardour-build-tools/waf
          chmod a+x /home/ardour/scripts/ardour-build-tools/rb-wscript
          chmod a+x /home/ardour/scripts/ardour-build-tools/vamp-wscript
          chmod a+x /home/ardour/src/waf

      - name: Prepare Directory
        shell: bash
        run: |
          mkdir -p ${{ github.workspace }}/tmp/winsrc
      # created a windows32/64bit build-stack for Ardour 
      # cross-compiled on GNU/Linux using gcc-8.2 (debian buster)

      - name: Install Build Stack Env
        shell: bash
        run: |
          bash /home/ardour/scripts/ardour-build-tools/x-mingw.sh
        env:
          XARCH: ${{ matrix.config.arch }}
          SRCDIR: /home/ardour/tmp/winsrc
          TMPDIR: /home/ardour/tmp
          ROOT: /home/ardour

      - name: Compile
        shell: bash
        run: |
          bash /home/ardour/scripts/x-win/compile.sh
        env:
          XARCH: ${{ matrix.config.arch }}
          ROOT: /home/ardour
          ENABLE_OPT: ${{ matrix.config.enable_opt }}

      - name: Package
        shell: bash
        run: |
          bash /home/ardour/src/tools/x-win/package.sh
        env:
          XARCH: ${{ matrix.config.arch }}
          ROOT: /home/ardour
          TMPDIR: /home/ardour/tmp
          SRCCACHE: /home/ardour/tmp/winsrc

      - name: Generate sha256sum & Upload Binary
        if: matrix.config.enable_opt == 'ON'
        # /home/ardour/tmp/Ardour-6.8.0-w64-Setup.exe
        shell: bash
        run: |
          SHA256SUM=$(sha256sum /home/ardour/tmp/Ardour-*-${{ matrix.config.warch }}-Setup.exe | cut -d ' ' -f 1)
          echo "${SHA256SUM}" > /home/ardour/tmp/Ardour-${{ env.ARDOUR_VERSION }}-${{ matrix.config.warch }}-Setup.exe.sha256sum
          echo "sha256sum: ${SHA256SUM}"
          TEMP_DOWNLOAD_URL=$(sh /home/ardour/scripts/upload-services/${{ env.UPLOAD_SERVICE }}.sh /home/ardour/tmp/Ardour-*-${{ matrix.config.warch }}-Setup.exe)
          echo Download URL is $TEMP_DOWNLOAD_URL

      - name: Generate sha256sum & Upload Binary (Debug)
        if: matrix.config.enable_opt == 'OFF'
        # /home/ardour/tmp/Ardour-6.8.0-dbg-w64-Setup.exe
        shell: bash
        run: |
          SHA256SUM=$(sha256sum /home/ardour/tmp/Ardour-*-dbg-${{ matrix.config.warch }}-Setup.exe | cut -d ' ' -f 1)
          echo "${SHA256SUM}" > /home/ardour/tmp/Ardour-${{ env.ARDOUR_VERSION }}-dbg-${{ matrix.config.warch }}-Setup.exe.sha256sum
          echo "sha256sum: ${SHA256SUM}"
          TEMP_DOWNLOAD_URL=$(sh /home/ardour/scripts/upload-services/${{ env.UPLOAD_SERVICE }}.sh /home/ardour/tmp/Ardour-*-dbg-${{ matrix.config.warch }}-Setup.exe)
          echo Download URL is $TEMP_DOWNLOAD_URL

      - name: Upload Artifact
        if: matrix.config.enable_opt == 'ON'
        uses: actions/upload-artifact@v3
        with:
          name: Ardour-Cross-Compile-Win-Artifact
          path: |
            ${{ github.workspace }}/tmp/Ardour-*-${{ matrix.config.warch }}-Setup.exe
            ${{ github.workspace }}/tmp/Ardour-*-${{ matrix.config.warch }}-Setup.exe.sha256sum
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

      - name: Upload Artifact (Debug)
        if: matrix.config.enable_opt == 'OFF'
        uses: actions/upload-artifact@v3
        with:
          name: Ardour-Cross-Compile-Win-Artifact-dbg
          path: |
            ${{ github.workspace }}/tmp/Ardour-*-dbg-${{ matrix.config.warch }}-Setup.exe
            ${{ github.workspace }}/tmp/Ardour-*-dbg-${{ matrix.config.warch }}-Setup.exe.sha256sum
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
